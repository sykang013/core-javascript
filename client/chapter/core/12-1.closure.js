/* ---------------------------------------------------------------------- */
/* Closure.                                                               */
/* ---------------------------------------------------------------------- */

//맥북 타임머신 같은건가
// 많은 개발자들은 클로저를 아느냐 모르느냐. JS를 잘하느냐의 기준이 되기 때문에 알아야한다.
//시다바리 일을 해주는 (지구의 환경을 알아와주는) 호랑이의 이름은 value에게는 중요하지 않기 때문에
//익명함수로 고고... 단축법도 고고
function first() {
  let x = 10;

  function second() {
    let y = 30;
    x + y;
  }
}

const value = first();

// 변수가 자기한테 없으면 계속 부모한테로 거슬러 올라가면서 찾는것 : 스코프 체이닝
// =>이게 가능한 이유는
//이게 가능한게 아우터 인바이러먼트 레퍼런스. 노션 a 참조

// 함수는 함수 자체가 태어난 환경을 기억한다.

//노션 참조

////클로저란 함수의안의 함수 이름은 중요하지 않고
